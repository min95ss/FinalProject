
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Chatting Home</title>
<script src="http://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.js"></script>

<!-- 스크립트 나중에 빼기 -->

<!--Bootstrap icons-->
<link href="/resources/assets/fonts/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">

<!--Google web fonts-->
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Hanken+Grotesk:wght@100..900&family=IBM+Plex+Mono:ital@0;1&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@48,400,0,0" />

<!--Simplebar css-->
<link rel="stylesheet" href="/resources/assets/vendor/css/simplebar.min.css">

<!--Choices css-->
<link rel="stylesheet" href="/resources/assets/vendor/css/choices.min.css">

<!--Main style-->
<link rel="stylesheet" href="/resources/assets/css/style.min.css">


<style>

#container {
   width : 700px;
   height : 500px;
/*    background-color : grey; */
}
#messageArea .me {
   color: green;
   text-align : right;
   float: right;
}

.me {
   color: red;
      text-align : right;
}

</style>
</head>
  
<body>
   <h2>채팅방</h2>
   대화명 : <input type="text" id="name"/>
   <input type="button" id="nameSetBtn" value="대화명설정"/>
   <input type="hidden" id="sessionId" value=""/>
   <input type="hidden" id="nickName" value=""/>
   <br/><hr/>
   
   <div id="container">
      <div id="messageArea"></div>
   </div>
   <input type="text" id="msg" />
   <input type="button" id="sendBtn" value="전송" onclick="sendMsg()"/>
   <form action="/chatting/chat/register" id="fileForm" method="post" enctype="multipart/form-data">
      <input type="file" id="fileUpload" value="파일"/>
      <input type="submit" value="파일전송"/>
   </form>
	
   <input type="hidden" id="memId" value="${memId}"/>
   <input type="hidden" id="crNum" value="${crNum}"/>
      
   
<br><br> 
   
<!--content-right-->
<div class="content-right card align-items-stretch h-100">

    <!--content right Header-->
    <div class="content-right-header card-header px-3">
        <div class="me-auto d-flex align-items-center">
            <div class="avatar-status d-none d-sm-flex status-online me-3 flex-shrink-0 avatar">
                <img src="assets/media/avatars/03.jpg" class="rounded-circle img-fluid"
                    alt="">
            </div>
            <div>
                <h5 class="mb-0 lh-1">Adam Voges</h5>
                <span class="small lh-sm d-none d-sm-block">Active now</span>
            </div>
        </div>
    </div>

    <!--content-right body-->
    <div class="content-right-body card-body">
        <div class="flex-row-fluid ">

           
            <!--Chat divider with day/month-->
            <div class="d-flex mb-4 align-items-center justify-content-center">
                <span class="d-block border-top flex-grow-1"></span>
                <div class="text-body-secondary mx-3 small">
                    Today</div>
                <span class="d-block border-top flex-grow-1"></span>
            </div>

            <!--Chat sender 상대방 채팅 -->
            <div class="chat_in mb-4">
                <!--Chat box-->
                <div class="chat_content">
                    <!--More dropdown-->
                    <div class="d-flex">
                        <!--text-->
                        <div class="chat_text">
                           		왼쪽채팅내용
                        </div>
                        <!--time-->
                        <div class="chat_time">
                            <span>12:33 PM</span>
                        </div>
                    </div>
                </div>
            </div>

            <!--Chat Self 내 채팅-->
            <div class="chat_out">
                <!--Chat box-->
                <div class="chat_content">
                    <div class="d-flex">
                        <!--text-->
                        <div class="chat_text">
                           		 오른쪽 채팅내용
                        </div>
                        <!--time-->
                        <div class="chat_time">
                            <span>12:33 PM</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!--content right footer-->
    <div class="content-right-footer card-footer" data-dropzone-area="">
        <div class="dz-preview" id="dz-preview-row" data-horizontal-scroll="">
        </div>
        <form class="chat-form rounded-pill" data-emoji-form="">
            <div class="row align-items-center g-1">

                <div class="col">
                    <div class="d-flex align-items-center">
                        <input class="form-control border-0 p-0 shadow-none bg-transparent"
                            placeholder="Type your message..." rows="1" data-emoji-input=""
                            data-autosize="true">
                    </div>
                </div>

                <div class="col-auto">
                    <div class="btn-group btn-group-icon btn-group-sm">
                        <button type="button"
                            class="btn p-0 size-35 btn-outline-secondary d-flex align-items-center justify-content-center dz-clickable"
                            id="dz-btn">
                            <span class="material-symbols-rounded align-middle">
                                attach_file
                                </span>
                        </button>
                        <button type="button"
                            class="btn p-0 size-35 btn-outline-secondary d-flex align-items-center justify-content-center">
                            <span class="material-symbols-rounded align-middle">
                                mood
                                </span>
                        </button>
                        <button type="button"
                            class="btn p-0 btn p-0 size-35 btn-outline-secondary d-flex align-items-center justify-content-center">
                            <span class="material-symbols-rounded align-middle">
                                send
                                </span>
                        </button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>
                            
</body>

<script type="text/javascript">
   
   // websocket 생성
    const websocket = new WebSocket("ws://localhost/coco/chatting"); // IP or localhost넣기/192.168.34.58
    websocket.onmessage = onMessage;   // 소켓이 메세지를 받을 때
    websocket.onopen = onOpen;      // 소켓이 생성될때(클라이언트 접속)
    websocket.onclose = onClose;   // 소켓이 닫힐때(클라이언트 접속해제)
    
    // 확인용
   console.log(location.host);

    //on entering chat room
    function onOpen(evt) {
       console.log("소켓열림 : " + evt);
    }

    //on exit chat room
    function onClose(evt) {
       $("#messageArea").append("연결 끊김");
       console.log("소켓닫김 : " + evt);
    }
      
    // 대화명
   var name = "";
    
   // 채팅 대화명 설정->입장
   $("#nameSetBtn").click(function(){
      name = document.getElementById("name").value;
      $("#nickName").val(name);
      var message = "님이 입장하셨습니다.";
      var enterGuest = "입장";

            let msg = {
                      'receiverId' : name,
                      'message' : message,
                      'time' : new Date().toTimeString().split(' ')[0], // hh:mm:ss
                      'enterGuest' : enterGuest // 일반 메세지랑 입장 구분하는용
                        }

                      if(message != null) {
                         websocket.send(JSON.stringify(msg));   // websocket handler로 전송(서버로 전송)
                      }
   });
   
   

    // 메세지 받았을 때
    function onMessage(msg) {
       
       var data = JSON.parse(msg.data); // msg를 받으면 data 필드 안에 Json String으로 정보가 있음
       console.log("데이터 : ", data)
       
       // 필요한 정보를 Json data에서 추출
        var sessionId = data.sessionId;
        var senderId = data.receiverId;
        var message = data.message;
        var time = data.time;
        var enterGuest = data.enterGuest; // 입장 구분용
        var fileFlag = data.fileFlag;  // 파일 구분용
        var str ="";
       
           // 첫 입장시
           if(enterGuest != null) {
              
              $("#messageArea").append(senderId + message + "  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[" + time + "]" + "<br/>");
              
             // 입장 후 메세지 
           } else {
              
              // 사람 처음 접속시 작동 (컨트롤러에서 접속시 getId를 발송 -> hidden에 기입후 나 /상대방 구별시 사용)
              if(data.type == "getId") { 
                 var inputSessionId = data.sessionId != null ? data.sessionId : "";
                    if(inputSessionId != '') {
                       $("#sessionId").val(inputSessionId); // 세션 아이디 기입
                    }
                    
              // 일반 메세지  && 파일인 경우 작동
              } else if(data.type = "plainMessage" && data.fileFlag == true) { // 일반 메시지 + 파일인 경우 
                    // 내가 보낼 시 
                    if(data.sessionId == $("#sessionId").val()) {
                       
                       
                       // 이미지 파일인 경우 
                     if(checkImageType(message)) {  // 이미지 -> 이미지태그를 이용한 출력형태
                              
                        str += "<img onclick=\"window.open('/coco/chatting/displayFile?fileName=" + message + "')\" src='/coco/chatting/displayFile?fileName=" + getThumbnailName(message) + "' style='cursor: pointer;' />";                      
                         $("#messageArea").append("</br><a class='me'>나" + " : " + str + "  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[" + time + "]" + "</a><br/><br/><br/><br/><br/>");

                         // 일반 파일인 경우
                         
                        } else {               // 파일이면 파일명에 대한 링크로만 출력
                              str += "<a href='/coco/chatting/displayFile?fileName=" + message + "'>" + getOriginalName(message) + "</a>";
                         $("#messageArea").append("<span class='me'>나 " + " : " + str + "  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[" + time + "]" + "</span><br/>");
                        }
                         
                     
                  // 상대방이 보낼 시
                    } else {
                       
                          // 이미지 파일인 경우
                        if(checkImageType(message)) {  // 이미지 -> 이미지태그를 이용한 출력형태
                                 
                           str += "<img onclick=\"window.open('/coco/chatting/displayFile?fileName=" + message + "')\" src='/coco/chatting/displayFile?fileName=" + getThumbnailName(message) + "' style='cursor: pointer;' />";
                            $("#messageArea").append("</br>" + senderId + " : " + str + "  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[" + time + "]" + "</a><br/>");

                        // 일반 파일인 경우
                        } else {               // 파일이면 파일명에 대한 링크로만 출력
                              str += "<a href='/coco/chatting/displayFile?fileName=" + message + "'>" + getOriginalName(message) + "</a>";
   
                              $("#messageArea").append(senderId + " : " + str + "  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[" + time + "]" + "<br/>");                     

                        }

                    }
               
              // 그냥 일반 메세지 처리 
              } else if(data.type = "plainMessage")  {    // 일반 메세지인 경우
                    if(data.sessionId == $("#sessionId").val()) {
                       $("#messageArea").append("<a class='me'>나" + " : " + message + "  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[" + time + "]" + "</a><br/>");

                       console.log("아작스 전 확인 >> ", message);
                       // 일반 메세지 인서트
	   					$.ajax({
	   						//CR_CONTENT_NUM, CR_NUM, CR_CONTENT, CR_DATE, ATTATCH_NUM, MEM_ID
							url : "/coco/chatting/chatMsgInsert",
							contentType : "application/json;charset=utf-8",
							method : "POST",
							data : JSON.stringify({
								'crNum' : $("#crNum").val(),
								'crContent' : message, 
// 								'crDate' : time,
								'memId' : $("#memId").val()
							}),
							success: function(res) { // success
									console.log("당신은 채팅인서트를 성공햇습니다", res);
							} ,  
							error : function(error) { // AJAX 요청이 실패했을 때 실행될 콜백 함수
								console.log("채팅인서트실패햇네요힘내새요");
							}
					  	}); // inset ajax
				  	
                       
                    } else {
                       $("#messageArea").append(senderId + " : " + message + "  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[" + time + "]" + "<br/>");
                    }
              }
           }        
    }
    
   
    var nickName = "";
   // 메세지 전송
    function sendMsg() {
      nickName = document.getElementById("nickName").value;
       var message = document.getElementById("msg").value;
          
         
      // 닉네임 미설정시 alert
       if(nickName == "") {
          alert("대화명을 입력해주세요.");
       }
      
       // 채팅 입력 칸이 비어있지 않을 경우만 정보를 Json형태로 전송
       if(message != "") {         
         let msg = {
            'sessionId' : $("#sessionId").val(),
            'receiverId' : nickName,
             'message' : message,
             'time' : new Date().toTimeString().split(' ')[0],
            'type' : "plainMessage"
               }
   
             if(message != null) {
                websocket.send(JSON.stringify(msg));
             }
         
          document.getElementById("msg").value = ''; // 채팅 보내고 빈칸처리
        }        
       
    }
    
   // 엔터 전송
   document.addEventListener("keypress", function(e){
      if(e.keyCode == 13){ 
         sendMsg();
      }
   });
   
   
 
   
   
// 파일-------------------------------------------------------------------------------
   
   
   
//    $("#fileUpload").change(function() {
//       $("#fileForm").submit();
      
//    });
   
   var fileUpload = $("#fileUpload");
   var fileFlag = false;
   

   fileUpload.on("change", function(event) {
      console.log("change event....!!!!");
      
      var files = event.target.files;
      var file = files[0];
      fileFlag = true;
      
      console.log(file);
      // ★★★비동기 + 파일 데이터 보내기 ==> form데이터를 만들어서, 거기 안에 <key, value>형식으로 데이터 구성해서 보낸다★★★
      // cf) 동기처리 : form태그사용 
      // content type: x19213-sdas어쩌구하는거 
      
      var formData = new FormData();
      formData.append("file", file);
      
      $.ajax({
         type : "post",
         url : "/coco/chatting/uploadAjax",
         data : formData,
         dataType : "text",       // 서버에서 넘겨받음(응답데이터)
         processData : false,   // 쿼리스트링화 방지
         contentType : false,    // x19213-sdas어쩌구 방식 고정 방지
         success : function(data) {
            console.log(data);
            let msg = {
                  'fileFlag' : fileFlag,
                  'sessionId' : $("#sessionId").val(),
                     'receiverId' : nickName,
                   'message' : data,
                   'time' : new Date().toTimeString().split(' ')[0],
                  'type' : "plainMessage"
                     }
              websocket.send(JSON.stringify(msg));   // websocket handler로 전송(서버로 전송)
//               $("#messageArea").append("파일전송" + " > " + data + getOriginalName(data) + "<br/>");            
            
//             $("#messageArea").append(str);
            
         } // success
         
      });
   });
   
   
   function getOriginalName(fileName) {
      if(checkImageType(fileName)){
         return;
      }
      
      var idx = fileName.indexOf("_") + 1; // 언더바를 기준으로 원본파일명 등 나뉨
      return fileName.substr(idx);
      
   } // getOriginalName

    
   function checkImageType(fileName) {
      var pattern = /jpg|gif|png|jpeg/i;
      return fileName.match(pattern); // 패턴과 일치하면 true(이미지파일이란 얘기)
   }
   
   function getThumbnailName(fileName) {
      var front = fileName.substr(0, 12);
      var end = fileName.substr(12);
      
      console.log("front : " + front);
      console.log("end : " + end);
      
      return front + "s_" + end; // 썸넬 : s_파일명 
   }
    

</script>
</html>