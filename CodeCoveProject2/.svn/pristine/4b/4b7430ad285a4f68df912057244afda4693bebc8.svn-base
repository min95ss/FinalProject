package kr.or.ddit.project.work.controller;

import java.util.ArrayList;
import java.util.List;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import kr.or.ddit.member.vo.MemberVO;
import kr.or.ddit.project.work.service.IWorkService;
import kr.or.ddit.project.work.vo.WorkVO;
import kr.or.ddit.project.workAssign.service.IWorkAssignService;
import kr.or.ddit.project.workAssign.vo.workAssignVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/coco/work")
public class CrudWorkController {
	
	@Inject
	private IWorkService workService;
	
	@Inject
	private IWorkAssignService workAssignService;

	@RequestMapping(value="/register/{pjId}", method=RequestMethod.POST)
	public String registerForm(@PathVariable("pjId") String pjId, WorkVO work, HttpServletRequest req) {
		log.info("프로젝트아이디"+pjId);
		
		HttpSession session = req.getSession();
		MemberVO sessionMember = (MemberVO) session.getAttribute("SessionInfo");
		work.setWorkReq(sessionMember.getMemId());
		
		work.setPjId(pjId);
		work.setWorkProgress("0");
		work.setParentWorkNum("0");
		work.setWorkColor("0");
		workService.register(work);
		
		String assign = work.getAssignMemId();
		List<String> assignList = new ArrayList<String>();
		
		String[] splitAssign = assign.split(",");
		for(int i=0; i<splitAssign.length; i++) {
			assignList.add(splitAssign[i]);
		}
		System.out.println("담당자???"+assignList);
		System.out.println("업무번호:"+ work.getWorkNum());
		
		workAssignVO workAssign = new workAssignVO();
		workAssign.setWorkNum(work.getWorkNum());
		workAssign.setAssignmentDelYn("N");
		for(int j=0; j<assignList.size(); j++) {
			workAssign.setColNum(assignList.get(j));
			workAssignService.register(workAssign);
		}
		
		return "redirect:/coco/project/detail/" + work.getPjId();
	}
	
	@RequestMapping(value="/delete", method=RequestMethod.POST)
	public String workDelete(WorkVO work) {
		String workNum = work.getWorkNum();
		workService.delete(workNum);
		return "redirect:/coco/project/detail/" + work.getPjId();
		
	}
	
}
